[{"D:\\CitiBridge-project\\Project final\\CitiBridge\\client\\src\\index.js":"1","D:\\CitiBridge-project\\Project final\\CitiBridge\\client\\src\\App.js":"2","D:\\CitiBridge-project\\Project final\\CitiBridge\\client\\src\\reportWebVitals.js":"3","D:\\CitiBridge-project\\Project final\\CitiBridge\\client\\src\\components\\FileUpload.js":"4","D:\\CitiBridge-project\\Project final\\CitiBridge\\client\\src\\components\\Message.js":"5","D:\\CitiBridge-project\\Project final\\CitiBridge\\client\\src\\components\\Progress.js":"6","D:\\CitiBridge-project\\Project final\\CitiBridge\\client\\src\\components\\Header.js":"7"},{"size":246,"mtime":1629368583827,"results":"8","hashOfConfig":"9"},{"size":959,"mtime":1629466329814,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2712,"mtime":1629463430192,"results":"12","hashOfConfig":"9"},{"size":518,"mtime":1629370797083,"results":"13","hashOfConfig":"9"},{"size":472,"mtime":1629370821648,"results":"14","hashOfConfig":"9"},{"size":4075,"mtime":1629782381653,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"68pasd",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\CitiBridge-project\\Project final\\CitiBridge\\client\\src\\index.js",["33"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["34","35"],"D:\\CitiBridge-project\\Project final\\CitiBridge\\client\\src\\App.js",[],"D:\\CitiBridge-project\\Project final\\CitiBridge\\client\\src\\reportWebVitals.js",[],"D:\\CitiBridge-project\\Project final\\CitiBridge\\client\\src\\components\\FileUpload.js",["36"],"import React, { Fragment, useState } from \"react\";\r\nimport Message from \"./Message\";\r\nimport Progress from \"./Progress\";\r\nimport axios from \"axios\";\r\n\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState(\"\");\r\n  const [filename, setFilename] = useState(\"Choose File\");\r\n  const [uploadedFile, setUploadedFile] = useState({});\r\n  const [message, setMessage] = useState(\"\");\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n\r\n  const onChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n    setFilename(e.target.files[0].name);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const res = await axios.post(\"/upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          setUploadPercentage(\r\n            parseInt(\r\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n            )\r\n          );\r\n        },\r\n      });\r\n\r\n      // Clear percentage\r\n      setTimeout(() => setUploadPercentage(0), 3000);\r\n\r\n      const { fileName, filePath } = res.data;\r\n\r\n      setUploadedFile({ fileName, filePath });\r\n\r\n      setMessage(\"File Uploaded\");\r\n      setTimeout(() => setMessage(), 7000);\r\n    } catch (err) {\r\n      if (err.response.status === 500) {\r\n        setMessage(\"There was a problem with the server\");\r\n        setTimeout(() => setMessage(), 7000);\r\n      } else {\r\n        setMessage(err.response.data.msg);\r\n      }\r\n      setUploadPercentage(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {message ? <Message msg={message} /> : null}\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"custom-file mb-4\">\r\n          <input\r\n            type=\"file\"\r\n            className=\"custom-file-input\"\r\n            id=\"customFile\"\r\n            onChange={onChange}\r\n          />\r\n          <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n            {filename}\r\n          </label>\r\n        </div>\r\n\r\n        <Progress percentage={uploadPercentage} />\r\n\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Upload\"\r\n          className=\"btn btn-primary btn-block mt-4\"\r\n          //className=\"btn btn-primary btn-lg\"\r\n        />\r\n      </form>\r\n      {/* {uploadedFile ? (\r\n        <div className=\"row mt-5\">\r\n          <div className=\"col-md-6 m-auto\">\r\n            <h3 className=\"text-center\">{uploadedFile.fileName}</h3>\r\n            <img style={{ width: \"100%\" }} src={uploadedFile.filePath} alt=\"\" />\r\n          </div>\r\n        </div>\r\n      ) : null} */}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n","D:\\CitiBridge-project\\Project final\\CitiBridge\\client\\src\\components\\Message.js",[],"D:\\CitiBridge-project\\Project final\\CitiBridge\\client\\src\\components\\Progress.js",[],"D:\\CitiBridge-project\\Project final\\CitiBridge\\client\\src\\components\\Header.js",["37","38","39","40"],{"ruleId":"41","severity":1,"message":"42","line":4,"column":8,"nodeType":"43","messageId":"44","endLine":4,"endColumn":23},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"41","severity":1,"message":"49","line":9,"column":10,"nodeType":"43","messageId":"44","endLine":9,"endColumn":22},{"ruleId":"41","severity":1,"message":"50","line":3,"column":8,"nodeType":"43","messageId":"44","endLine":3,"endColumn":13},{"ruleId":"41","severity":1,"message":"51","line":4,"column":10,"nodeType":"43","messageId":"44","endLine":4,"endColumn":18},{"ruleId":"41","severity":1,"message":"52","line":5,"column":10,"nodeType":"43","messageId":"44","endLine":5,"endColumn":21},{"ruleId":"41","severity":1,"message":"53","line":7,"column":7,"nodeType":"43","messageId":"44","endLine":7,"endColumn":13},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["54"],"no-negated-in-lhs",["55"],"'uploadedFile' is assigned a value but never used.","'axios' is defined but never used.","'useState' is defined but never used.","'JsonToTable' is defined but never used.","'sample' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]